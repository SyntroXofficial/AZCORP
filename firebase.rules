rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow admin access to all collections
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.email == 'andres_rios_xyz@outlook.com';
    }
    
    // Allow users to access their own data
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Add this line to allow checking for existing emails during signup
      allow list: if true;
    }

    // Allow read access to userLogins for admin
    match /userLogins/{loginId} {
      allow read, write: if request.auth != null && request.auth.token.email == 'andres_rios_xyz@outlook.com';
      allow create: if request.auth != null;
    }

    // Allow access to system collection for signup stats and announcements
    match /system/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == 'andres_rios_xyz@outlook.com';
    }

    // Community messages rules - UPDATED FOR PUBLIC ACCESS
    match /community_messages/{messageId} {
      allow read: if true; // Allow everyone to read messages
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        // Allow users to update their own messages
        request.auth.uid == resource.data.userId ||
        // Allow admin to update any message
        request.auth.token.email == 'andres_rios_xyz@outlook.com' ||
        // Allow users to update votes and comments
        (
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['votes', 'userVotes', 'comments'])
        )
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        request.auth.token.email == 'andres_rios_xyz@outlook.com'
      );
    }

    // Reports rules
    match /reports/{reportId} {
      allow read: if request.auth != null && request.auth.token.email == 'andres_rios_xyz@outlook.com';
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.token.email == 'andres_rios_xyz@outlook.com';
    }
  }
}